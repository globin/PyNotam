[tool.poetry]
name = "pynotam"
version = "0.1.0"
description = "Notice To Air Missions Parser Written in Python"
authors = ["Slava Koyfman <slavak@users.noreply.github.com>"]
license = "GPL-2.0-or-later"
readme = "README.md"
repository = "https://github.com/slavak/PyNotam"

[tool.poetry.dependencies]
python = "^3.10"
parsimonious = "^0.10.0"

[tool.poetry.group.dev.dependencies]
black = "^23.1"
mypy = "^1.0"
flake8 = "^6.0"
flake8-import-order = "^0.18"
flake8-docstrings = "^1.7"
pytest = "^7.4.0"
types-parsimonious = "^0.10.0.9"

[tool.poetry.scripts]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
exclude = [ ]
python_version = '3.10'
show_error_codes = true
follow_imports = 'silent'
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true
disallow_untyped_defs = true
implicit_optional = true

[[tool.mypy.overrides]]
module = [ ]
ignore_missing_imports = true

[tool.pyright]
include = ["."]
ignore = []

pythonVersion = "3.10"
pythonPlatform = "Linux"

typeCheckingMode = "strict"

reportIncompatibleVariableOverride = false
reportMissingTypeArgument = false
reportUnknownArgumentType = false
reportUnknownMemberType = false
reportUnknownVariableType = false

reportCallInDefaultInitializer = "error"
reportImplicitOverride = "error"
reportImplicitStringConcatenation = "error"
reportImportCycles = "error"
reportMissingSuperCall = "error"
reportPropertyTypeMismatch = "error"
reportShadowedImports = "error"
reportUninitializedInstanceVariable = "error"
reportUnnecessaryTypeIgnoreComment = "error"
reportUnusedCallResult = "error"
